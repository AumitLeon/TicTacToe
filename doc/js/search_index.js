var search_data = {"index":{"searchIndex":["board","tictactoe","checkifvalidposition?()","checkwinner()","displayboard()","getitem()","isempty?()","isfull?()","new()","new()","play()","updateboard()"],"longSearchIndex":["board","tictactoe","tictactoe#checkifvalidposition?()","tictactoe#checkwinner()","board#displayboard()","board#getitem()","board#isempty?()","board#isfull?()","board::new()","tictactoe::new()","tictactoe#play()","board#updateboard()"],"info":[["Board","","Board.html","","<p>Creation of the matrix. The Board is a seperate class so that it is more\nmodular. This board can be modified …\n"],["TicTacToe","","TicTacToe.html","","<p>Primary class for the Tic-Tac-Toe game. Provides functions that allow\nplayer one to play as &#39;X,&#39; …\n"],["checkIfValidPosition?","TicTacToe","TicTacToe.html#method-i-checkIfValidPosition-3F","(position)","<p>Checks if the given position is valid in terms of our given Board.  Params:\n<code>position</code>::The given position …\n"],["checkWinner","TicTacToe","TicTacToe.html#method-i-checkWinner","()","<p>Checks to see if there is a winner.  Returns: player1 if three X&#39;s are\nadjacent, player2 if three …\n"],["displayBoard","Board","Board.html#method-i-displayBoard","()","<p>Display the board and the game element within each cell.\n"],["getItem","Board","Board.html#method-i-getItem","(position)","<p>Get the item at the given position.  Params:  <code>position</code>::The\nposition within the Board we should visit …\n"],["isEmpty?","Board","Board.html#method-i-isEmpty-3F","()","<p>Check if the Board is empty. Returns: True if empty, false if otherwise.\n"],["isFull?","Board","Board.html#method-i-isFull-3F","()","<p>Check if the Board is full.  Params: Returns: true if Board is full, false\nif otherwise.\n"],["new","Board","Board.html#method-c-new","()","<p>Initialize the class and array that will serve as our matrix/game Board.\nMore elements can be added, …\n"],["new","TicTacToe","TicTacToe.html#method-c-new","(playerOne, playerTwo)","<p>Initializes several instance variables. Params:\n<code>player1</code>::Player one (will play as X).\n<code>player2</code>::Player …\n"],["play","TicTacToe","TicTacToe.html#method-i-play","()","<p>Generates gameplay events such as turns, announcement of victories and\ndraws.\n"],["updateBoard","Board","Board.html#method-i-updateBoard","(element, position)","<p>Update the Board with the given game element and the position.  Params:\n<code>element</code>::The element to be added …\n"]]}}